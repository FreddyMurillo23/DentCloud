// Generated by https://quicktype.io

class PacienteSeguidosData {
  String jsontype;
  List<PacientesSeguido> items= new List();
  PacienteSeguidosData.fromJsonList(List<dynamic> jsonList) {
    if (jsonList == null) return;
    //? Por cada item que recibe los va enviando al metodo que extrae los datos del json y retorna el mapa luego los agrega a una lista de items de tipo publicacion.
    for (var item in jsonList) {
      final publicacion = new PacientesSeguido.fromJsonMap(item);
      items.add(publicacion);
      // print(publicacion.comentarios.length);
    }
  }
}

class PacientesSeguido {
  String correoPaciente;
  String nombrePaciente;
  DateTime fechaNacimientoPaciente;
  String celularPaciente;
  String sexoPaciente;
  String provincia;
  String ciudad;
  String fotoPaciente;

  PacientesSeguido({
    this.correoPaciente,
    this.nombrePaciente,
    this.fechaNacimientoPaciente,
    this.celularPaciente,
    this.sexoPaciente,
    this.provincia,
    this.ciudad,
    this.fotoPaciente,
  });

  PacientesSeguido.fromJsonMap(Map<String, dynamic> json){
   correoPaciente=json['correo_paciente'];
   nombrePaciente=json['nombre_paciente'];
   fechaNacimientoPaciente=DateTime.parse(json['fecha_nacimiento_paciente']);
   celularPaciente=json['celular_paciente'];
   sexoPaciente=json['sexo_paciente'];
   provincia=json['provincia'];
   ciudad=json['ciudad'];
   fotoPaciente=json['foto_paciente'];

  }

  getTimeHour()
  {
    DateTime now = new DateTime.now();
    final fecha=fechaNacimientoPaciente.year;
    final recien=now.year;
    final anio=recien-fecha;

    return anio;

  }
}
